---
format_version: '11'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: ios
trigger_map:
- push_branch: master
  workflow: primary
- pull_request_source_branch: "*"
  workflow: primary
workflows:
  primary:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@8:
        inputs:
        - merge_pr: 'no'
        - update_submodules: 'no'
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            if [[ -z "$BITRISE_PULL_REQUEST" ]] || [[ -z "$BITRISEIO_GIT_BRANCH_DEST" ]]; then
                exit 0
            fi

            git fetch --jobs=10 --no-tags --no-recurse-submodules origin "refs/heads/$BITRISEIO_GIT_BRANCH_DEST"
        title: Fetch PR destination branch
    - script@1:
        title: Set Ruby version to 3.2.2
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            echo "3.2.2" > .ruby-version
    - restore-cache@2:
        inputs:
        - key: |-
            cache-{{ .Arch }}-{{ .OS }}-{{ checksum "Gemfile.lock" }}
        title: Restore cache - ruby gems
    - script@1:
        title: Initial setup
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # make pipelines' return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
            set -o pipefail
            # debug log
            set -x

            bundle install
    - script@1:
        title: Set GEM_CACHE_PATH env var 
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            RBENV_DIR="`cd $(rbenv which ruby)/../..;pwd`"
            echo "Gem cache directory: $RBENV_DIR"
            envman add --key GEM_CACHE_PATH --value $RBENV_DIR
    - save-cache@1:
        inputs:
        - key: cache-{{ .Arch }}-{{ .OS }}-{{ checksum "Gemfile.lock" }}
        - paths: "$GEM_CACHE_PATH"
        run_if: ".IsCI | and (not .IsPR)"
        title: Cache ruby gems
    - restore-cache@2:
        inputs:
        - key: |-
            cache-{{ .Arch }}-{{ .OS }}-{{ checksum "Mintfile" }}
        title: Restore cache - swift tooling installed via mint
    - fastlane@3:
        inputs:
        - lane: run install_swift_tooling_in_bitrise
        - enable_cache: 'no'
        - update_fastlane: 'false'
        title: Install Swift Tooling
    - save-cache@1:
        inputs:
        - key: cache-{{ .Arch }}-{{ .OS }}-{{ checksum "Mintfile" }}
        - paths: |-
            $HOME/.mint
            $HOME/.mint/bin
        run_if: ".IsCI | and (not .IsPR)"
        title: Cache swift tooling installed via mint
    - fastlane@3:
        inputs:
        - lane: tests
        - enable_cache: 'no'
        - update_fastlane: 'false'
        title: Run tests
    - custom-test-results-export@1:
        inputs:
        - search_pattern: "*/test_output/Paysafe*"
        - test_name: unit tests
        is_always_run: true
    - fastlane@3:
        title: lint
        inputs:
        - enable_cache: 'no'
        - update_fastlane: 'false'
        - lane: lint
    - restore-cache@2:
        inputs:
        - key: |-
            cache-{{ .Arch }}-{{ .OS }}-sonar
        title: Restore cache - sonar
    - fastlane@3:
        title: Sonarqube scan
        inputs:
        - lane: sonarqube pull_request_key:$BITRISE_PULL_REQUEST pull_request_base:$BITRISEIO_GIT_BRANCH_DEST branch_name:$BITRISE_GIT_BRANCH
        - enable_cache: 'no'
        - update_fastlane: 'false'
    - save-cache@1:
        inputs:
        - key: cache-{{ .Arch }}-{{ .OS }}-sonar
        - paths: "$HOME/.sonar/cache"
        run_if: ".IsCI | and (not .IsPR)"
        title: Cache Sonar tooling
    - fastlane@3:
        title: Push to GitHub
        inputs:
        - enable_cache: 'no'
        - update_fastlane: "false"
        - lane: push_to_github
        run_if: '{{enveq "BITRISE_GIT_BRANCH" "master"}}'
    - deploy-to-bitrise-io@2: {}
meta:
  bitrise.io:
    stack: osx-xcode-15.2.x
    machine_type_id: g2-m1.8core
app:
  envs:
  - opts:
      is_expand: false
    FASTLANE_XCODE_LIST_TIMEOUT: '120'
  - opts:
      is_expand: false
    SONAR_HOST: https://sonar.neterra.paysafe.com/